Docker集中化web界面管理平台shipyard
http://seanlook.com/2014/12/29/docker-shipyard-centralized-management-webui/

Shipyard（github）是建立在docker集群管理工具Citadel之上的可以管理容器、主机等资源的web图形化工具。包括core和extension两个版本，core即shipyard主要是把多个 Docker host上的 containers 统一管理（支持跨越多个host），extension即shipyard-extensions添加了应用路由和负载均衡、集中化日志、部署等。

1. 几个概念
engine
一个shipyard管理的docker集群可以包含一个或多个engine（引擎），一个engine就是监听tcp端口的docker daemon。shipyard管理docker daemon、images、containers完全基于Docker API，不需要做其他的修改。另外，shipyard可以对每个engine做资源限制，包括CPU和内存；因为TCP监听相比Unix socket方式会有一定的安全隐患，所以shipyard还支持通过SSL证书与docker后台进程安全通信。
rethinkdb
RethinkDB是一个shipyard项目的一个docker镜像，用来存放账号（account）、引擎（engine）、服务密钥（service key）、扩展元数据（extension metadata）等信息，但不会存储任何有关容器或镜像的内容。一般会启动一个shipyard/rethinkdb容器shipyard-rethinkdb-data来使用它的/data作为数据卷供另外rethinkdb一个挂载，专门用于数据存储。

2. 搭建过程
修改tcp监听
Shipyard 要管理和控制 Docker host 的话需要先修改 Docker host 上的默认配置使其监听tcp端口(可以继续保持Unix socket）。有以下2种方式
sudo docker -H tcp://0.0.0.0:4243 -H unix:///var/run/docker.sock -d 启动docker daemon。如果为了避免每次启动都写这么长的命令，可以直接在/etc/init/docker.conf中修改。
修改/etc/default/docker的DOCKER_OPTS
DOCKER_OPTS="-H tcp://127.0.0.1:4243 -H unix:///var/run/docker.sock"。这种方式在我docker version 1.4.1 in ubuntu 14.04上并没有生效。

重启服务
	$ sudo docker -H tcp://0.0.0.0:4243 -H unix:///var/run/docker.sock -d
验证
	$ netstat -ant  |grep 4243
	tcp6       0      0 :::4243                 :::*                    LISTEN
启动rethinkdb
shipyard（基于Python/Django）在v1版本时安装过程比较复杂，既可以通过在host上安装，也可以部署shipyard镜像（包括shipyard-agent、shipyard-deploy等组件）。v2版本简化了安装过程，启动两个镜像就完成：

获取一个/data的数据卷
	$sudo docker run -it -d --name shipyard-rethinkdb-data \
 	 --entrypoint /bin/bash shipyard/rethinkdb -l
使用数据卷/data启动RethinkDB
	docker run -it -P -d --name shipyard-rethinkdb \
 	 --volumes-from shipyard-rethinkdb-data shipyard/rethinkdb
部署shipyard镜像
启动shipyard控制器：

	sudo docker run -it -p 8080:8080 -d --name shipyard \
 	 --link shipyard-rethinkdb:rethinkdb shipyard/shipyard
至此已经可以通过浏览器访问http://host:8080来访问shipyard UI界面了。
第一次run后，关闭再次启动时直接使用：

	sudo docker stop shipyard shipyard-rethinkdb shipyard-rethinkdb-data
	sudo docker start shipyard-rethinkdb-data shipyard-rethinkdb shipyard

---------------------------------------------------------------------------------------------
Option 1: Shipyard Deploy

Usage
You must bind the Docker socket into the container in order for the deploy container to work with the Docker host.

docker run --rm shipyard/deploy -h: show help

Setup Shipyard Stack

docker run --rm -v /var/run/docker.sock:/var/run/docker.sock shipyard/deploy start

Stop Shipyard Stack

docker run --rm -v /var/run/docker.sock:/var/run/docker.sock shipyard/deploy stop

Restart Shipyard Stack

docker run --rm -v /var/run/docker.sock:/var/run/docker.sock shipyard/deploy restart

Upgrade Shipyard

docker run --rm -v /var/run/docker.sock:/var/run/docker.sock shipyard/deploy upgrade

Remove Shipyard

docker run --rm -v /var/run/docker.sock:/var/run/docker.sock shipyard/deploy remove